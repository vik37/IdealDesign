@model CareerVM

@inject IViewLocalizer _localizer;

@{
    ViewData["Title"] = _localizer["Career"];
}

<div class="container my-container">
    <div class="heading">
        <h2>@ViewData["Title"]</h2>
    </div>
    <div class="row"></div>
    <div class="container-form col-md-12">
        @using (Html.BeginForm("Create", "Career", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @*@Html.HiddenFor(x => x.Id)*@
            <div class="row">
                @*<div class="col-md-1"></div>*@
                <div class="col-md-1 form-blocks container-firstName">
                    @Html.LabelFor(x => x.Firstname)
                   
                    <br />
                    <span class="glyphicon glyphicon-user">
                        @Html.TextBoxFor(x => x.Firstname, new { @class = "text-firstname" })
                    </span>
                </div>
                <div class="col-md-4"></div>
                <div class="col-md-1 form-blocks container-lastName">
                    @Html.LabelFor(x => x.Lastname)
                   
                    <br />
                    <span class="glyphicon glyphicon-user">
                        @Html.TextBoxFor(x => x.Lastname, new { @class = "text-lastname" })
                    </span>
                </div>
                @*<div class="col-md-1"></div>*@
                <div class="col-md-1 text-danger error-firstname">
                    @Html.ValidationMessageFor(x => x.Firstname)
                </div>
                <div class="col-md-6"></div>
                <div class="col-md-3"></div>
                <div class="col-md-1 text-danger">
                    @Html.ValidationMessageFor(x => x.Lastname)
                </div>
            </div>

            <div class="row">
                @*<div class="col-md-10"></div>*@
                <div class="col-md-4"></div>
                <div class="col-md-1 form-blocks Phone">
                    @Html.LabelFor(x => x.Phone)
                   
                    <br />
                    <span class="glyphicon glyphicon-phone">
                        @Html.TextBoxFor(x => x.Phone, new { @class = "text-phone" })
                    </span>
                </div>
                <div class="col-md-10"></div>
                <div class="col-md-4"></div>

                <div class="col-md-2 text-danger">
                     @Html.ValidationMessageFor(x => x.Phone)
                    
                    
                </div>

            </div>
            <hr />
            <div class="row">
                <div class="col-md-2"></div>
                <div class="col-md-1 btn  form-blocks description">
                    @Html.LabelFor(x => x.Description)
                   
                    <br />
                    @Html.TextAreaFor(x => x.Description, new { @class = "description-text" })
                </div>
                <div class="col-md-10"></div>
                <div class="col-md-4"></div>
               
                <div class="col-md-2 text-danger">
                    @Html.ValidationMessageFor(x => x.Description)
                    
                </div>

            </div>
            <div class="row">
                @*<div class="col-md-10"></div>*@
                <div class="col-md-1"></div>
                <div class="col-md-1 form-blocks container-file">
                    @Html.LabelFor(x => x.Resume, new { @class = "label-resume" })
                    <br />
                    <span class="glyphicon glyphicon-upload">
                        <span class="btn  btn-file">
                            @Html.TextBoxFor(x => x.Resume, new { type = "file", accept = ".doc,.docx,.pdf,.txt" })

                        </span>
                    </span>
                </div>
                <div class="col-md-6"></div>
                <div class="col-md-1 form-blocks button">

                    <button class="form-button" type="submit">SUBMIT</button>
                </div>
                <br />
                <div class="col-md-10"></div>
                <div class="col-md-1 text-danger error-resume">
                    @Html.ValidationMessageFor(x => x.Resume)
                    <p>@ViewBag.errorUploadMsg</p>
                    <p>@ViewBag.errorResumeMsg</p>
                </div>

            </div>
            <div class="row">
                <div class="col-md-10"></div>

                <br />
                @*<div class="col-md-12 text-danger">
                        @Html.ValidationMessageFor(x => x.Resume)
                    </div>*@

            </div>



            @*<div class="col-md-1 container-form">*@

            @*</div>*@
        }

    </div>

</div>

<style type="text/css">
    .my-container {
        /*border: 3px solid black;*/
        /*padding: 50px;*/
        margin-top: 240px;
        width: 100%;
        height: auto;
        background-color: #969696;
        padding: 0 50px 0 50px;
    }

    .heading {
        margin-top: 10px;
    }

    h2 {
        font-size: 28px;
        color: rgba(64, 160, 219,0.8);
        text-shadow: 2px 2px 3px #fff;
        letter-spacing: 5.5px;
        text-decoration: underline;
        font-family: 'Felix Titling';
        font-weight: 600;
        background-color: rgba(0, 0, 0, 0.64);
        text-align: center;
        width: 270px;
        height: 40px;
        margin: 0 auto;
        padding: 2px;
        border-radius: 60px;
        border-left: 10px solid black;
        border-right: 10px solid black;
    }

    .container-form {
        padding: 20px 1px 20px 90px;
        width: 100%;
        height: auto;
        /*background-color:darkgreen;*/
        border: 1px solid rgb(255, 252, 252);
    }
    /* .container-lastName{
        margin-right:150px;
    }*/
    .form-blocks {
        width: 400px;
        background-color: brown;
        height: 80px;
        margin: 5px auto;
        border-bottom-left-radius: 10px;
    }

    .text-firstname {
        width: 320px;
        height: 25px;
        font-size: 16px;
        font-weight: 700;
        letter-spacing: 1.4px;
    }

    .text-lastname {
        width: 320px;
        height: 25px;
        font-size: 16px;
        font-weight: 700;
        letter-spacing: 1.4px;
    }

    .glyphicon {
        padding-left: 5px;
        /*border:1px solid blue;*/
        background-color: rgba(255, 252, 252, 0.86);
    }

    .glyphicon-upload {
        width: 250px;
        background-color: rgba(255, 255, 255, 0.00);
        font-size: 34px;
        text-shadow: 1px -1px 4px white;
    }

    .text-danger {
        width: 350px;
        /*height:40px;*/
        text-align: center;
        /*padding-top:10px;
        padding-bottom:10px;*/
        margin: 1px 0 7px 0;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
        font-size: 28px;
        font-weight: 300;
        letter-spacing: 1.5px;
        text-shadow: 1px 2px 1px white;
        background-color: rgba(255, 255, 255, 0.19);
        border-radius: 30px;
        box-decoration-break: slice;
        border: 2px solid white;
    }

    .error-firstname {
        margin: 0 200px 0 10px;
    }

    .Phone {
        width: 280px;
        margin-left: 16px;
    }

    .text-phone {
        width: 200px;
        height: 40px;
        font-size: 20px;
        font-weight: 700;
        letter-spacing: 1.4px;
        /*margin-left:10px;*/
    }

    .glyphicon-phone {
        font-size: 20px;
    }

    .description {
        height: 250px;
        width: 50%;
        margin-left: 50px;
    }

    .description-text {
        width: 100%;
        height: 80%;
        font-size: 18px;
        font-weight: bold;
        letter-spacing: 1.8px;
    }

    .container-file {
        width: 200px;
        height: 120px;
        padding: 15px 0 1px 0;
        text-align: center;
        font-size: 28px;
        background-color: rgba(49, 183, 2, 0.17);
        box-shadow: rgba(11, 43, 102, 0.55) 20px 20px 60px inset;
    }

    .btn-file {
        position: relative;
        overflow: hidden;
    }

        .btn-file [type=file] {
            position: absolute;
            top: 0;
            right: 0;
            min-width: 100%;
            min-height: 100%;
            font-size: 100px;
            text-align: right;
            filter: alpha(opacity=0);
            opacity: 0;
            outline: none;
            background: white;
            cursor: inherit;
            display: block;
        }

    .label-resume {
        cursor: pointer;
    }

    .error-resume {
        margin-left: 40px;
    }

    .button {
        width: 200px;
    }

    .form-button {
        width: 150px;
        height: 40px;
        margin: 20px 10px 20px 10px;
        background-image: repeating-radial-gradient(circle at 50%, #333, #333 10px, #eee 30px, #eee 20px);
        color: white;
        font-family: 'Times New Roman', Times, serif;
        font-weight: 500;
        text-shadow: 2px 2px 2px rgb(86, 176, 196);
        font-size: 22px;
        letter-spacing: 2.3px;
        transition: background 12s ease-out;
        /*-webkit-transition: background-image 12s;*/
    }

        .form-button:active {
            box-shadow: rgb(0, 0, 0) 2px 1px 30px;
        }

        .form-button:hover {
            background-image: repeating-radial-gradient(circle at 50%, #333, #333 -10px, #eee 5px, #eee -20px);
            color: rgb(253, 255, 198);
            text-shadow: 1px 1px 3px rgb(0, 0, 0);
            background-position: 20px;
        }

    label {
        color: rgba(255, 255, 255, 1);
        text-shadow: 2px 2px 1px #333;
        letter-spacing: 2px;
    }
</style>
<script type="text/javascript">
    let phone = document.getElementsByClassName("text-phone")[0];

    phone.value = "+389/";
    console.log(phone);
</script>