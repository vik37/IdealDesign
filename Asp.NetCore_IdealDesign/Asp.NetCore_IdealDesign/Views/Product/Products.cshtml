@model List<ProductVM>
@{
    ViewData["Title"] = "products".ToUpper();
    
}

<div class="container my-container">
    <div class="row">
        <div class="col-md-10 header-title">
            <h2>@ViewData["Title"]</h2>
        </div>
    </div>
    <br />
    <div class="col-md-4 ">
        <form method="get">
            <input type="button" class="btns" title="ProductType" value="Kitchens"
                   onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.Kitchens})'" />
        </form>
    </div>
    <div class="col-md-4 ">
        <form method="get">
            <input type="button" class="btns" title="ProductType" value="Wardrobes"
                   onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.Wardrobes})'" />
        </form>
    </div>
    <div class="col-md-4 ">
        <form method="get">
            <input type="button" class="btns" title="ProductType" value="Bathroom Furniture"
                   onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.BathroomFurniture})'" />
        </form>
    </div>
    <div class="row">
        <div class="col-md-4 ">
            <form method="get">
                <input type="button" class="btns" title="ProductType" value="Living Room Furniture"
                       onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.LivingRoomFurniture})'" />
            </form>
        </div>
        <div class="col-md-4 ">
            <form method="get">
                <input type="button" class="btns" title="ProductType" value="WallBeds"
                       onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.WallBeds})'" />
            </form>
        </div>
        <div class="col-md-4 ">
            <form method="get">
                <input type="button" class="btns" title="ProductType" value="Childrens Furniture"
                       onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.ChildrensFurniture})'" />
            </form>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-1 ">
            <form method="get">
                <input type="button" class="btns" title="ProductType" value="Other"
                       onclick="location.href='@Url.Action("ProductType","Product",new { type = ProductTypeVM.Other})'" />
            </form>
        </div>
    </div>
    @if (User.Identity.IsAuthenticated)
    {
        @*<div class="row">*@
            @*<div class="col-md-4"></div>*@
            <div class="col-md-12">
                <form method="get">
                    <input type="button" class="btn btn-sm" title="User" value="My Home"
                           onclick="location.href='@Url.Action("GetByUsername","User",new { username = User.Identity.Name})'" />
                </form>
            </div>
        @*</div>*@
    }

</div>

<style type="text/css">
    .my-container {
        /*border: 3px solid black;*/
        /*padding: 50px;*/
        margin-top: 250px;
        width: 100%;
        height: auto;
        background-color: #969696;
        padding-left:130px;
    }
    h2 {
        font-size: 28px;
        color: rgba(64, 160, 219,0.8);
        text-shadow: 2px 2px 3px #fff;
        letter-spacing: 5.5px;
        text-decoration: underline;
        font-family: 'Felix Titling';
        font-weight: 600;
        background-color: rgba(0, 0, 0, 0.64);
        text-align: center;
        width: 270px;
        height: 40px;
        margin: 0 auto;
        padding: 2px;
        border-radius: 60px;
        border-left: 10px solid black;
        border-right: 10px solid black;
    }
    .header-title{
        margin-left:35px;
    }
    .btns {
        width: 230px;
        height: 50px;
        margin: 20px;
        border-radius: 10px;
        border: 3px solid black;
        box-shadow: rgba(177, 33, 33, 0.82) 10px 10px 50px inset;
        outline-offset: 3px;
        outline-style: inset;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-size: 18px;
        font-weight: 900;        
        text-shadow: 2px 2px 3px #fff;
        text-decoration:dotted;
    }
    .row {
        margin: 0 auto;
    }
    .btn {
        background-color: rgba(36, 122, 160, 0.71);
        border: 1px solid rgb(255, 106, 0);
        font-size: 20px;
        font-weight: 700;
        box-shadow: rgba(2, 2, 2, 0.18) 1px 1px 1px 10px inset;
        /*box-shadow: rgba(177, 33, 133, 0.72) 8px 1px 8px 1px inset;*/
        text-shadow: 1px 1px 3px #fff;
        border-radius: 30px;
        transform: skewX(-10deg);
        transition: transform 0.8s;
       /* transition: box-shadow 0.8s;*/
    }
        .btn:active {
            border-radius: 2px;
            box-shadow: rgba(2, 2, 2, 0.28) 1px 1px 1px 3px;
            
        }
        .btn:hover {
            transform: skewX(2deg);
        }
</style>
