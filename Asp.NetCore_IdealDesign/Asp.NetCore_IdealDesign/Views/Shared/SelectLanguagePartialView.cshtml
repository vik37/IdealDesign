@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocOptions
@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItem = LocOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();

}

<div title="@Localizer["Request culture provider: "] @requestCulture?.Provider?.GetType().Name">
    <form id="Select Language" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path"
          method="post" class="form-horizontal" role="form">
        <div class="col-md-1"></div>
        @Localizer["Language:"] <select name="culture"
                                        asp-for="@requestCulture.RequestCulture.UICulture.Name" class="language" asp-items="cultureItem"></select>
        <button type="submit" class="btn btn-default btn-xs">Save</button>
    </form>
</div>
<style type="text/css">
    .language{
        background-color:rgb(0, 0, 0);
        color:rgb(255, 255, 255);
        font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
    }
    .language > *{
        color:rgb(23, 71, 172);            
    }
    
    [value="mk"]{
        color:rgba(255, 0, 0,0.60);
    }
    [value="en-US"] {
        color: rgba(2, 189, 4,0.60);
    }
    [value="sq"] {
        color: rgba(153, 22, 172,0.60);
    }
    [selected="selected"] {
        background-color: rgba(245, 255, 74, 0.90);
        color: rgb(0, 0, 0);
    }
    .form-horizontal{
        color:rgba(255, 255, 255, 0.57);
    }
</style>